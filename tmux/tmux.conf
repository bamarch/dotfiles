#First time?
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# tmux source ~/.tmux.conf
# sudo apt install urlview

#Fonts
# git clone https://github.com/powerline/fonts.git ~/tmpfonts
# ~/tmpfonts/install.sh
# rm -rf ~/tmpfonts

#Install plugins
# Ctrl + A, I

# set-clipboard is not supported in gnome-terminal
set -g set-clipboard off

# Cheatsheet:

#New session
# Ctrl + ? -> show commands
#  tmux new -s myname
#Attach
#  tmux a #(at or attach)
#Attach to last session
#  tmux attach -d
#Attach to named
#  tmux a -t myname
#Kill session
#  tmux kill-session -t myname
#Kill all sessions
#  tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill

#Urlview:
#ctrl + u, arrows to nav, select with space then return

# based on https://stackoverflow.com/a/40902312/1046584
# find tmux version
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

##  pre 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
   "bind -t vi-copy v begin-selection; \
   bind -t vi-copy r rectangle-toggle; \
   bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'; \
   bind -t vi-copy C-c copy-pipe 'xclip -in -selection clipboard'; \
   bind -t vi-choice h tree-collapse; \
   bind -t vi-choice l tree-expand; \
   bind -t vi-choice H tree-collapse-all; \
   bind -t vi-choice L tree-expand-all; \
   #bind -t emacs-copy MouseDragEnd1Pane copy-pipe 'pbcopy'; \
   #bind -t vi-copy MouseDragEnd1Pane copy-pipe 'pbcopy'"

#  post 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
   "bind-key -T copy-mode-vi v send -X begin-selection ; \
   bind-key -T copy-mode-vi V send -X select-line ; \
   bind-key -T copy-mode-vi r send -X rectangle-toggle ; \
   bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'; \
   bind-key -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'; \
   bind-key -T copy-mode-vi H send-keys -X start-of-line ; \
   bind-key -T copy-mode-vi L send-keys -X end-of-line ; \
   bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
   bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
   bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
   bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
   bind-key -T copy-mode-emacs MouseDragEnd1Pane send-keys -X copy-pipe 'pbcopy'; \
   bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'pbcopy'"

# After you enter copy mode, [, visual select with v then yank, paste with cap P
bind P paste-buffer
# Shift highlight then shift middle-click if using mouse

# 0 is too far from ` ;)
set -g base-index 1
set-window-option -g pane-base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Change the prefix binding to a
unbind C-b
set -g prefix C-a

# Don't quit on ctrl+d
#set-environment -g 'IGNOREEOF' 2

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
#superceded in newer tmux versions
#setw -g mode-mouse on
setw -g mouse on
setw -g monitor-activity on

#split window at current location
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-Left run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-Down run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-Up run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use C-arrow keys without prefix key to switch panes (no vim pane
# awareness)
#bind -n C-Left select-pane -L
#bind -n C-Right select-pane -R
#bind -n C-Up select-pane -U
#bind -n C-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Alt vim bind to switch windows
bind -n M-h  previous-window
bind -n M-l next-window

# Re-order windows using Ctrl + Shift + arrows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Re-order windows using Ctrl + Alt + vimmap
bind-key -n C-M-h swap-window -t -1
bind-key -n C-M-l swap-window -t +1

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# ctrl k to clear history
bind -n C-k clear-history


#THEME
set -g @themepack 'powerline/double/blue'

###Bottom
#TPM
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-urlview'
# Save restore keybindings
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @plugin 'tmux-plugins/tmux-continuum'
# restore sessions when server comes up
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
# restore vim
# for vim
set -g @resurrect-strategy-vim 'session'
# capture pane contents
# ensure though no && or || in default-command
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
